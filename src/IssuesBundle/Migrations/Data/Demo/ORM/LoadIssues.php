<?php

namespace IssuesBundle\Migrations\Data\Demo\ORM;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\Persistence\ObjectManager;
use IssuesBundle\Entity\Issue;
use IssuesBundle\Entity\Priority;
use IssuesBundle\Model\Service\IssueTypesDefinition;
use Oro\Bundle\UserBundle\Tests\Selenium\Pages\User;

/**
 * Class LoadIssues
 * @package IssuesBundle\Migrations\Data\Demo\ORM
 */
class LoadIssues extends AbstractFixture
{
    public function load(ObjectManager $manager)
    {
        $issue = new Issue();

        /**
         * @var \Oro\Bundle\UserBundle\Entity\User $user
         */
        $user = $this->loadUser($manager);

        if (!$user) {
            throw new \DomainException(
                'Admin user not found, ensure that'
                .' fixtures from UserBundle'
                .' are executed first.'
            );
        }

        $organization = $user->getOrganization();

        $priority = $this->loadPriority($manager);

        $issue->setOrganization($organization);

        $issue->setSummary('Example Issue');
        $issue->setCode('TEST1');
        $issue->setDescription('This is an example, autogenerated, issue.');
        $issue->setType(IssueTypesDefinition::TYPE_STORY);
        $issue->setPriority($priority);
        $issue->setReporter($user);
        $issue->setAssignee($user);
        $issue->setCreatedAt(new \DateTime('now'));
        $issue->setUpdatedAt(new \DateTime('now'));

        $issue->getCollaborators()->add($user);

        foreach ($this->createSubTasks($manager) as $subtask) {
            $issue->addChild($subtask);

            $manager->persist($subtask);
        }

        $manager->persist($issue);

        $manager->flush();
    }

    /**
     * @param ObjectManager $manager
     * @return ArrayCollection
     */
    private function createSubTasks(ObjectManager $manager)
    {
        $subtasks = new ArrayCollection();

        /**
         * @var \Oro\Bundle\UserBundle\Entity\User $user
         */
        $user = $manager->getRepository('Oro\Bundle\UserBundle\Entity\User')->findOneBy(['username' => 'admin']);

        if (!$user) {
            throw new \DomainException('Admin user not found, ensure that fixtures from UserBundle'
                .' are executed first.');
        }

        $organization = $user->getOrganization();

        $priority = $this->loadPriority($manager);

        for ($i=0; $i<5; $i++) {
            $n = $i + 1;

            $issue = new Issue();
            $issue->setOrganization($organization);

            $issue->setSummary('Example subtask #'.$n);
            $issue->setCode('TEST sub'.$n);
            $issue->setDescription('This is an example, autogenerated, issue.');
            $issue->setType(IssueTypesDefinition::TYPE_SUBTASK);
            $issue->setPriority($priority);
            $issue->setReporter($user);
            $issue->setAssignee($user);
            $issue->setCreatedAt(new \DateTime('now'));
            $issue->setUpdatedAt(new \DateTime('now'));

            $issue->getCollaborators()->add($user);

            $manager->persist($issue);

            $subtasks->add($issue);
        }

        return $subtasks;
    }

    /**
     * @param ObjectManager $manager
     * @return User
     */
    private function loadUser(ObjectManager $manager)
    {
        $user = $manager->getRepository('OroUserBundle:User')->findOneBy(['username' => 'admin']);

        return $user;
    }

    /**
     * @param ObjectManager $manager
     * @return Priority
     */
    private function loadPriority(ObjectManager $manager)
    {
        $priority = $manager->getRepository('IssuesBundle:Priority')->findOneBy([]);

        return $priority;
    }
}
