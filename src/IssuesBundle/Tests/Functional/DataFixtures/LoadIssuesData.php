<?php

namespace IssuesBundle\Tests\Functional\DataFixtures;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\DataFixtures\AbstractFixture;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use IssuesBundle\Entity\Issue;
use Oro\Bundle\SecurityBundle\Acl\Persistence\AclManager;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

class LoadIssuesData extends AbstractFixture implements ContainerAwareInterface, DependentFixtureInterface
{
    /**
     * @var ContainerInterface
     */
    protected $container;

    /**
     * {@inheritdoc}
     */
    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
    }

    public function load(ObjectManager $manager)
    {
        $issue = new Issue();

        $user = $this->getReference(LoadUserData::USER_FIRST_USERNAME);

        $manager->persist($user);

        if (!$user) {
            throw new \DomainException(
                'Admin user not found, ensure that fixtures from UserBundle'
                .' are executed first.'
            );
        }

        $organization = $user->getOrganization();

        $issue->setOrganization($organization);

        $issue->setOwner($user);

        $issue->setSummary('Example Issue for functional test');
        $issue->setCode('TEST444');
        $issue->setDescription('This is an example, autogenerated, issue.');
        $issue->setType(Issue::TYPE_STORY);
        $issue->setPriority($this->getReference('priority_10'));
        $issue->setReporter($user);
        $issue->setAssignee($user);
        $issue->setCreatedAt(new \DateTime('now'));
        $issue->setUpdatedAt(new \DateTime('now'));

        $this->setReference('issue', $issue);

        $manager->persist($issue);

        for ($i=0;$i<5;$i++) {
            $n = $i + 1;

            $childIssue = new Issue();
            $childIssue->setOrganization($organization);
            $childIssue->setOwner($user);

            $childIssue->setSummary('Example subtask #'.$n);
            $childIssue->setCode('TEST sub'.$n);
            $childIssue->setDescription('This is an example, autogenerated, issue.');
            $childIssue->setType(Issue::TYPE_SUBTASK);
            $childIssue->setPriority($this->getReference('priority_10'));
            $childIssue->setReporter($user);
            $childIssue->setAssignee($user);
            $childIssue->setCreatedAt(new \DateTime('now'));
            $childIssue->setUpdatedAt(new \DateTime('now'));

            $manager->persist($childIssue);

            $issue->addChild($childIssue);
        }

        $this->setReference('issue_with_parent', $childIssue);

        $manager->flush();
    }

    public function getDependencies()
    {
        return [
            'IssuesBundle\Migrations\Data\ORM\LoadPriorities',
            'IssuesBundle\Migrations\Data\ORM\LoadResolutions',
            'IssuesBundle\Tests\Functional\DataFixtures\LoadUserData'
        ];
    }
}
